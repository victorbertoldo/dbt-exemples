
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'test_project'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'my-test-snowflake-db'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"

on-run-end:
  - 'grant usage on schema analytics.dbt to role analyst'
  - 'grant select on all tables in schema analytics.dbt to role analyst'
  - 'grant select on all views in schema analytics.dbt to role analyst'
on-run-start:
  # - 'USE WAREHOUSE transform_dw'
  - 'create table if not exists dbt.audit (model text, state text, time timestamp_ltz)'

vars:
  my_first_var: True
  my_second_var: 2020
  my_third_var: 1


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  test_project:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: table
      # tags: "daily"

    new:
      +materialized: view
      # tags: "hourly"
      # post-hook: 'grant usage on schema {{target.this}} to role analyst'
  # On this identation level, the pre-hook is running for all model folders 
  pre-hook: "insert into dbt.audit (model, state, time) values ('{{this.name}}', 'starting model deployment', current_timestamp)"



